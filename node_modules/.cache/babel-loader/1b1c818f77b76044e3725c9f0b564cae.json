{"ast":null,"code":"var _jsxFileName = \"/home/khan/Documents/Self Programming/bootcamp piaic/redux-toolkit/src/Todo.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTask } from './Redux/counterSlice';\n\nfunction Todo() {\n  const [id, setId] = useState(0);\n  const [task, setTask] = useState('');\n  const tskob = useSelector(state => {\n    console.log('STATE IS', state.counter.tasks);\n    return state.counter(0).tasks.map(task => {\n      var _ref;\n\n      return (_ref = task.id === 0) !== null && _ref !== void 0 ? _ref : task.name;\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"ID IN THE BEGINNING IS \", tskob.id, \"Id: \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => {\n      setId(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), \"Task: \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => {\n      setTask(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/khan/Documents/Self Programming/bootcamp piaic/redux-toolkit/src/Todo.js"],"names":["React","useState","useDispatch","useSelector","addTask","Todo","id","setId","task","setTask","tskob","state","console","log","counter","tasks","map","name","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,SAASC,IAAT,GAAgB;AACZ,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,CAAD,CAA5B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMS,KAAK,GAAGP,WAAW,CAAGQ,KAAD,IAAW;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAK,CAACG,OAAN,CAAcC,KAAtC;AACE,WAAOJ,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC,KAAjB,CAAuBC,GAAvB,CAA2BR,IAAI,IAAI;AAAA;;AACxC,qBAAOA,IAAI,CAACF,EAAL,KAAY,CAAnB,uCAAwBE,IAAI,CAACS,IAA7B;AAAoC,KAD/B,CAAP;AAEH,GAJwB,CAAzB;AAMF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAC0BP,KAAK,CAACJ,EADhC,uBAEM;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGY,CAAD,IAAO;AACpCX,MAAAA,KAAK,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACH,KAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,yBAMQ;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAIF,CAAD,IAAO;AACvCT,MAAAA,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,KAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANR,CADF;AAYD;;AAED,eAAef,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector} from 'react-redux'\nimport { addTask } from './Redux/counterSlice'\n\nfunction Todo() {\n    const [id, setId] = useState(0)\n    const [task, setTask] = useState('')\n    const tskob = useSelector( (state) => {\n      console.log('STATE IS', state.counter.tasks)\n        return state.counter(0).tasks.map(task => {\n          return task.id === 0 ?? task.name  })\n    })\n\n  return (\n    <div>\n      ID IN THE BEGINNING IS {tskob.id}\n      Id: <input type='text' onChange={(e) => {\n          setId(e.target.value)\n      }\n      } />\n      Task: <input type='text' onChange= {(e) => {\n          setTask(e.target.value)\n      }} />\n    </div>\n  )\n}\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}